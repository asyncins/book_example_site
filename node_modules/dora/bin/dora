#!/usr/bin/env node

var cp = require('child_process');
var fs = require('fs');
var path = require('path');

function existSync(filename) {
  try {
    return fs.statSync(filename).isFile();
  } catch(_) {
    return false;
  }
}

function start() {
  const p = cp.fork(__dirname + '/dora', process.argv.slice(2));
  p.on('message', function(data) {
    if (data === 'restart') {
      p.kill('SIGINT');
      start();
    }
  });
}

// Main
if (!process.send) {
  start();
}

// Child Process
else {
  var program = require('commander');

  program
    .version(require('../package').version, '-v, --version')
    .option('-p, --port <n>', 'server port. Default: 8000')
    .option('--plugins <name|file>', 'defines the plugins which should be used.')
    .option('--verbose', 'run with more logging messages.')
    .option('-c, --config <config>', 'file to configure dora')
    .parse(process.argv);

  var doraConfigFile = program.config && program.config.charAt(0) === '/' ?
        program.config : path.join(process.cwd(), program.config || 'dora.config.js');
  var doraConfig = existSync(doraConfigFile) ? require(doraConfigFile) : {};

  require('../lib')({
    port: program.port || doraConfig.port || '8000',
    plugins: program.plugins ? program.plugins.split(/,(?=\w|\.|\/)/) : (doraConfig.plugins || []),
    verbose: program.verbose !== undefined ? program.verbose : doraConfig.verbose,
  });
  require('atool-monitor').emit();
}
